// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace library.Data.Models
{

    public partial class CUsersusersourcereposlibrarylibraryCatalogsdatadbContext : DbContext
    {
        public CUsersusersourcereposlibrarylibraryCatalogsdatadbContext(DbContextOptions<CUsersusersourcereposlibrarylibraryCatalogsdatadbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Author> Authors { get; set; }

        public virtual DbSet<BibliographicMaterial> BibliographicMaterials { get; set; }

        public virtual DbSet<Publisher> Publishers { get; set; }

        public virtual DbSet<User> Users { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Author>(entity =>
            {
                entity.ToTable("Author");

                entity.Property(e => e.FullName).IsRequired();
            });

            modelBuilder.Entity<BibliographicMaterial>(entity =>
            {
                entity.ToTable("BibliographicMaterial");

                entity.Property(e => e.Name).IsRequired();

                entity.HasOne(d => d.Author).WithMany(p => p.BibliographicMaterials).HasForeignKey(d => d.AuthorId);

                entity.HasOne(d => d.Publisher).WithMany(p => p.BibliographicMaterials).HasForeignKey(d => d.PublisherId);
            });

            modelBuilder.Entity<Publisher>(entity =>
            {
                entity.ToTable("Publisher");

                entity.Property(e => e.Name).IsRequired();
            });

            modelBuilder.Entity<User>(entity =>
            {
                entity.ToTable("User");

                entity.Property(e => e.Id)
                   // .ValueGeneratedNever()
                    .HasColumnName("id");
                entity.Property(e => e.Login).HasColumnName("login");
                entity.Property(e => e.Password).HasColumnName("password");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
      
    }
}

